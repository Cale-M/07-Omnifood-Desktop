/*

--- 01 TYPOGRAPHY SYSTEM
          
- SPACING SYSTEM (px)
2 / 4 / 8 / 12 / 16 / 24 / 32 / 48 / 64 / 80 / 96 / 128

- Font weights:
Default: 400
Medium: 500
Semi-bold: 600
Bold: 700

- Line heights:
Default: 1
Small: 1.05
Medium: 1.2
Paragraph default: 1.6

-Letter spacing:
-0.5px
0.75px
          
- FONT SIZE SYSTEM (px)
10 / 12 / 14 / 16 / 18 / 20 / 24 / 30 / 36 / 44 / 52 / 62 / 74 / 86 / 98

--- 02 COLORS

Primary:
#e67e22

Tints:
#fdf2e9
#eb984e

#fae5d3

Shades:
#cf711f

Accents:


Greys: 
#555
#333
#6f6f6f (lightest grey allowd on #fdf2e9)

--- 05 SHADOWS

rgba(0, 0, 0, 0.075);

--- 06 BORDER-RADIUS

Default: 9px
Medium: 11px

--- 07 WHITESPACE

*/

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box; /* We are using border-box because this website is made in a box model  */
}

/* Any properties used in the HTML element become root properties, which take preference over all code: */
html {
  /* font-size: 10px; */
  /* If you set the font-size here the multiplication of rem will change from 16px per rem to 10px per rem */

  font-size: 62.5%;
  /* The above percentage we got from this calculation = 10px / 16px * 100 = 62.5 */
  /* We use this because it is in respect to the user's browser font-size setting */
}

body {
  /* Note rubik is the font-style we chose from Google fonts */
  font-family: "Rubik" sans-serif;
  line-height: 1;
  font-family: 400;
  color: #555;
}

/**************************/
/* GENERAL REUSABLE COMPONENETS */
/**************************/

.container {
  /* Another max-width defualt variable would be 1140px, looks fairly similar */
  max-width: 120rem;
  margin: 0 auto;
  padding: 0 3.2rem;
}

/* New way to create a grid, without making more than one grid (a reusable grid) */
.grid {
  display: grid;
  column-gap: 9.6rem;
  gap: 9.6rem;

  /* We had to add this because later on the new grids we add won't have 
  space between them if we didn't add margin bottom in this class */
  /* margin-bottom: 9.6rem; */
}

/* and then we add this below so that grids which do not need more margin-
bottom like above, won't be change, this is a new property we must make use
of: */
/* .grid:last-child {
  margin-bottom: 0;
} */

/* instead of using the property above we can accomplish the same thing, with
another new property below (not that we removed both margin-bottoms above
because this property below does both their jobs and is much quicker): */
.grid:not(:last-child) {
  margin-bottom: 9.6rem;
}

.grid--2-cols {
  grid-template-columns: repeat(2, 1fr);
}

.grid--3-cols {
  grid-template-columns: repeat(3, 1fr);
}

.grid--4-cols {
  grid-template-columns: repeat(4, 1fr);
}

.grid--center-v {
  align-items: center;
}

.heading-primary,
.heading-secondary,
.heading-tertiary {
  font-weight: 700;
  color: #333;
  letter-spacing: -0.5px;
}

.heading-primary {
  font-size: 5.2rem;
  line-height: 1.05;
  margin-bottom: 3.2rem;
}

.heading-secondary {
  font-size: 4.4rem;
  line-height: 1.2;
  margin-bottom: 9.6rem;
}

.heading-tertiary {
  font-size: 3rem;
  line-height: 1.2;
  margin-bottom: 3.2rem;
}

.subheading {
  display: block;
  /* Above we had to change this to block, because our span element is an inline-block 
  which was trying to override this code */
  font-size: 1.6rem;
  font-weight: 600;
  color: #cf711f;
  text-transform: uppercase;
  margin-bottom: 1.6rem;
  letter-spacing: 0.75px;
}

.btn:link,
.btn:visited {
  display: inline-block;

  text-decoration: none;
  font-size: 2rem;
  font-weight: 600;
  padding: 1.6rem 3.2rem;
  border-radius: 9px;

  /* Our first use of the animation property, 
  this makes the color of the button change
  with a nice and clean animation and we add
  the length of the animation after the part of
  code we want to change, which could be all but
  in the case below it is the background-color.
  NOTE: animations won't work on the classes which involve the button below because this is the first state/oirginal state of the button, therefor animations will only work on the original state of an element*/
  /* Put transitions on original "state" of the element */
  /* transition: background-color 0.3s; */
  transition: all 0.3s;
}

.btn--full:link,
.btn--full:visited {
  background-color: #e67e22;
  color: #fff;
}

.btn--full:hover,
.btn--full:active {
  background-color: #cf711f;
}

.btn--outline:link,
.btn--outline:visited {
  background-color: #fff;
  color: #555;
}

.btn--outline:hover,
.btn--outline:active {
  background-color: #fdf2e9;

  /* border: 3px solid #fff; */
  /* We need to make a border for the button but the method above won't work because it puts the border outisde of the button */

  /* Trick to add a border inside of the button */
  box-shadow: inset 0 0 0 3px #fff;
  /* Inset tells the code the shadow should be inside the element */
}

.link:link,
.link:visited {
  display: inline-block;
  color: #e67e22;
  text-decoration: none;
  /* coders usually make their own line under a link (like below using border-bottom)
  and always remove the original line by setting text-decoration to none */
  border-bottom: 1px solid currentColor;
  /* currentColor means the line we created will use the color selected above */
  /* To use padding below we must set display to inline-block, remember this when padding
  won't work */
  padding-bottom: 2px;
  transition: all 0.3s;
}

.link:hover,
.link:active {
  color: #cf711f;
  /* Below we removed the border-bottom when hovering over the link with the transparent
  keyword */
  border-bottom: 1px solid transparent;
}

.list {
  list-style: none;
  display: flex;
  flex-direction: column;
  gap: 1.6rem;
}

.list-item {
  font-size: 1.8rem;
  display: flex;
  align-items: center;
  gap: 1.6rem;
}

.list-icon {
  width: 3rem;
  height: 3rem;
  color: #e67e22;
}

/* HELPER CLASSES/SETTING CLASSES: */
/* Below is what we coders call a "helper class, take not on it's placement in the HTML
file on the left": */
.margin-right-sm {
  margin-right: 1.6rem !important;
  /* Remember adding !important like we did above, gives this class the highest priority */
}

/* I added this helper class below so that I could add some space between our grid
and the link below it without affecting the grid, if we did not do this our grid would
have looked weird */
.margin-bottom-md {
  margin-bottom: 4.8rem !important;
}

.center-text {
  text-align: center;
}

strong {
  font-weight: 600;
}
